name: CI CD Pipeline - main

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SERVER_SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PAT: ${{ secrets.DOCKER_PAT }}
  DOCKER_REPOSITORY_NAME: ${{ secrets.DOCKER_REPOSITORY_NAME }}
  DOCKER_TAG: ${{ secrets.DOCKER_TAG }}
  PORT: ${{ secrets.PORT }}
  GITHUB_RUN_NUMBER: ${{ github.run_number }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PAT }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY_NAME }}:${{ env.DOCKER_TAG }}
            ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY_NAME }}:${{ env.DOCKER_TAG }}-${{ env.GITHUB_RUN_NUMBER }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Server via SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ env.SERVER_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub
          ssh -v -o StrictHostKeyChecking=no ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} << EOF
            echo "${{ env.DOCKER_PAT }}" | docker login --username ${{ env.DOCKER_USERNAME }} --password-stdin
            docker pull ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY_NAME }}:${{ env.DOCKER_TAG }}
            docker stop ${{ env.DOCKER_REPOSITORY_NAME }} || true
            docker rm ${{ env.DOCKER_REPOSITORY_NAME }} || true
            docker run -d --env-file apidev-triana.env \
              --name ${{ env.DOCKER_REPOSITORY_NAME }} \
              -p ${{ env.PORT }}:80 \
              ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY_NAME }}:${{ env.DOCKER_TAG }}
          EOF
